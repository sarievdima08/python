2.1
''''
Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.
''''
while True:
    oper = str(input('Введите знак математической операции [+-*/] или 0 для выхода: '))
    if oper == '0':
        break
    a = float(input('Введите первое число: '))
    b = float(input('Введите второе число: '))

    if oper == '/' and b == 0:
        print('Деление на 0 недопустимо!')
        continue
    elif oper == '+':
        res = a + b;
    elif oper == '-':
        res = a - b;
    elif oper == '*':
        res = a * b;
    elif oper == '/':
        res = a / b;
    else:
        print('Неверный ввод операции!')
        continue
    print(f'Результат вычисления: {res}')

2.2
''''
Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
''''
num = int(input('Введите натуральное число: '))

odd = even = 0

while num > 0:
    if num % 10 % 2 == 0:
        even += 1
    else:
        odd += 1
    num //= 10
print(f'Четных цифр: {even}, нечетных: {odd}')

2.3
''''
Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, то надо вывести число 6843.
''''
antinum = 0

num = int(input('Введите любое натуральное число: '))

while num > 0:
    antinum += num % 10
    num //= 10
    if num > 0:
        antinum *= 10
print(f'Обратное число: {antinum}')

2.4
''''
Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ... Количество элементов (n) вводится с клавиатуры.
''''
item = 1
summa = 0

n = int(input('Введите число элементов последовательности для их суммирования: '))

for i in range(n):
    summa += item
    item /= -2

print(f'Сумма {n} элементов последовательности равна: {summa}')

2.5
''''
Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно. Вывод выполнить в табличной форме: по десять пар «код-символ» в каждой строке.
''''

first = 32
last = 127
pairs_str = ''

for i in range(first, last+1):

    if (i - first) % 10 == 0 and i > first:
        print(pairs_str)
        pairs_str = ''
    if i > 99:
        pairs_str += f'{chr(i)} - {ord(chr(i))}  '
    else:
        pairs_str += f'{chr(i)} - {ord(chr(i))}   '

print(pairs_str)

2.6
''''
В программе генерируется случайное целое число от 0 до 100.
Пользователь должен его отгадать не более чем за 10 попыток.
После каждой неудачной попытки должно сообщаться, больше или меньше загаданного введенное пользователем число.
Если за 10 попыток число не отгадано, то вывести его.
''''
import random

num = random.randint(0, 100)

for i in range(10):
    n = int(input(f'Попытка {i + 1}. Угадайте число от 0 до 100 за 10 попыток: '))
    if n == num:
        print('Вы угадали! ПОБЕДА!!!')
        break
    elif n > num:
        print(f'Введенное число {n} больше загаданного...')
    else:
        print(f'Введенное число {n} меньше загаданного...')
else:
    print(f'Сожалею, но Вы проиграли. Загаданное число: {num}')

2.7
''''
Написать программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
1+2+...+n = n(n+1)/2, где n – любое натуральное число.
''''
nat_summa = 0

n = int(input('Введите количество натуральных чисел последовательности: '))
for i in range(1, n + 1):
    nat_summa += i

print(nat_summa == n * (n + 1) / 2)

2.8
''''
Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
''''
summa = 0

n_nums = int(input('Введите количество чисел в последовательности: '))
digit = int(input('Введите искомую цифру: '))

for i in range(n_nums):
    number = int(input(f'Введите {i + 1}-е число последовательности: '))
    while number > 0:
        if number % 10 == digit:
            summa += 1
        number //= 10
print(f'Количество цифр {digit} в введенной последовательсти равно: {summa}')

2.9
''''
Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.
''''
max_sum = 0

n_nums = int(input('Введите количество чисел последовательности: '))

for i in range(n_nums):
    this_number = number = int(input(f'Введите {i + 1}-е натуральное число: '))
    summa = 0;

    while number > 0:
        summa += number % 10
        number //= 10

    if summa > max_sum:
        max_sum = summa
        super_num = this_number

print(f'Число {super_num} обладает максимальной суммой цифр: {max_sum}')
